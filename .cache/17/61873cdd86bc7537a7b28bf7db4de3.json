{"id":"infinite.html","dependencies":[{"name":"./mollyhome/indexhome.html","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/mollyhome/indexhome.html","entry":true,"parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/1.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/1.jpg","parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/designJardin.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/designJardin.jpg","entry":true,"parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/2.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/2.jpg","parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/nomanland1.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/nomanland1.jpg","entry":true,"parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/5.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/5.jpg","parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/corpfemme.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/corpfemme.jpg","entry":true,"parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/4.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/4.jpg","parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/v total.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/v total.jpg","entry":true,"parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/3.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/3.jpg","parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/salleensemble.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/salleensemble.jpg","entry":true,"parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"./assets/images/6.jpg","dynamic":true,"resolved":"/Users/meinixue/Documents/GitHub/aladino-test2/assets/images/6.jpg","parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html"},{"name":"_css_loader","parent":"/Users/meinixue/Documents/GitHub/aladino-test2/infinite.html","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/Users/meinixue/Documents/GitHub/aladino-test2/package.json","includedInParent":true,"mtime":1616730093633}],"generated":{"html":"<html>\n  <head>\n    <title>Aladino</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/flickity@2/dist/flickity.min.css\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Chango&display=swap\"> \n    <style>html,\n      body {\n        margin: 0;\n        padding: 0;\n        \n      }\n\n      * {\n        box-sizing: border-box;\n      }\n\n      .wrapper {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        margin: 0 auto;\n      }\n\n      .carousel {\n        width: 100%;\n      }\n\n      .cell {\n        width: 25%;\n        margin: 0 20px;\n        height: 35vh;\n        opacity: 0.75;\n      }\n      .cell .touchshow {\n        display: display-outside;\n        justify-content: center;\n        text-align: center;\n        font-family: 'Chango', cursive;\n        visibility: hidden;\n        background-color: transparent;\n        color: #fff;\n        position: absolute ;\n        z-index: 10;\n      }\n      .cell:hover .touchshow{\n        visibility: visible;\n      }\n\n      .cell img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n\n      canvas {\n        z-index: 1;\n      }\n\n      @media only screen and (max-width: 700px) {\n         .carousel {\n          min-width: 100%;\n          position: absolute;\n          padding-left: 50px;\n         }\n\n         img {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n\n      }</style>\n  </head>\n\n  <body>\n    <div class=\"wrapper\">\n      <div class=\"carousel\">\n        <div class=\"cell\">\n          <a href=\"/ca0b3ee42977103c0df7633f50dbfb31.html\"><img src=\"/3f3e71bc65ea5d507ad87ab02f9c0db9.jpg\" alt=\"chambreideale\"></a>\n          <span class=\"touchshow\">Fly with me, slide crazily</span>\n        </div>\n        <div class=\"cell\">\n          <a href=\"/4271b58f99ac4e34fb3452c32b554afa.jpg\"><img src=\"/5ee6e46d858c8cbfcc777470df66db45.jpg\" alt=\"jardin\"></a>\n          <span class=\"touchshow\">Fly with me, slide crazily</span>\n        </div>\n        <div class=\"cell\">\n          <a href=\"/783111085de3633e008e1ab1ed9879a5.jpg\"><img src=\"/cbc7383c0dbda9d06b318e521ed048d9.jpg\" alt=\"nomanland2\"></a>\n          <span class=\"touchshow\">Fly with me, slide crazily</span>\n        </div>\n        <div class=\"cell\">\n          <a href=\"/64b69a1726bd334fe186a5c83270f75f.jpg\"><img src=\"/d49179d82fe118fba72ba2734863ecca.jpg\" alt=\"corpfemme\"></a>\n          <span class=\"touchshow\">Fly with me, slide crazily</span>\n        </div>\n        <div class=\"cell\">\n          <a href=\"/29988bf9a939090f9452a24c61c823f7.jpg\"><img src=\"/b4f1638f3d798457542ff4bc20eadd3a.jpg\" alt=\"vetement\"></a>\n          <span class=\"touchshow\">Fly with me, slide crazily</span>\n        </div>\n        <div class=\"cell\">\n          <a href=\"/c56f1c8701b1ac5f307b61c1ef0ee9b7.jpg\"><img src=\"/40595ac92a3a7571a2f4b0ced9fb924e.jpg\" alt=\"salleensemble\"></a>\n        </div> \n        </div>\n    </div>\n\n    <script src=\"https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js\"></script>\n\n    <script type=\"module\">\n      import Aladino from \"./src/index.js\";\n      import lerp from \"./assets/lerp.js\";\n\n      const flkty = new Flickity(document.querySelector(\".carousel\"), {\n        freeScroll: true,\n        dragThreshold: 0,\n        freeScrollFriction: 0.07,\n        prevNextButtons: false,\n        pageDots: false,\n        wrapAround: true,\n      });\n\n      const aladino = new Aladino({\n        density: 20,\n      });\n\n      document.body.appendChild(aladino.canvas);\n\n      const material = aladino.material({\n        vertex: /* glsl */ `\n        attribute vec2 position;\n        attribute vec2 uv;\n\n        uniform mat4 projection;\n        //uniform float time;\n        uniform float speed;\n        uniform float speed2;\n\n        varying vec2 vUv;\n        varying float vCenter;\n\n        float parabola( float x, float k ) {\n          return pow( 4.0*x*(1.0-x), k );\n        }\n\n        mat4 rotationMatrix(vec3 axis, float angle) {\n          axis = normalize(axis);\n          float s = sin(angle);\n          float c = cos(angle);\n          float oc = 1.0 - c;\n\n          return mat4(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s, 0.0,\n          oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s, 0.0,\n          oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c, 0.0,\n          0.0, 0.0, 0.0, 1.0);\n        }\n\n        void main() {\n          vUv = uv;\n\n          vec4 pos = vec4(position, 0.0, 1.0);\n\n          float spee = speed * 40.0;\n\n          // pos.x += parabola(uv.y, 1.0) * spee;\n\n          vec4 pp = projection * vec4(position, 0.0, 1.0);\n          float yy = ((pp / pp.w).x + 1.0) / 2.0;\n          yy = clamp(yy, 0.0, 1.0);\n\n          vCenter = yy;\n\n          float p = smoothstep(.0, 1.0, yy);\n          \n          vec4 rotated = rotationMatrix(vec3(0.4, 0.1, 0.7), p) * pos;\n\n          pos = mix(pos, rotated, spee);\n\n          // pos.z = parabola(, 2.4) * speed2 * 160.0;\n          // pos.z = clamp(pos.z, -6.0, 6.0);\n\n\n          gl_Position = projection * pos;\n        }\n      `,\n        fragment: /* glsl */ `\n        precision highp float;\n\n        uniform vec2 size;\n\n        uniform vec2 sizeImage;\n        uniform sampler2D image;\n\n        varying vec2 vUv;\n        varying float vCenter;\n\n\n        vec4 coverTexture(sampler2D tex, vec2 imgSize, vec2 ouv) {\n          vec2 s = size;\n          vec2 i = imgSize;\n\n          float rs = s.x / s.y;\n          float ri = i.x / i.y;\n          vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n          vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n          vec2 uv = ouv * s / new + offset;\n        \n          return texture2D(tex, uv);\n        }\n\n        float luma(vec3 color) {\n          return dot(color, vec3(0.224, 0.800, 0.800));\n        }\n\n        void main() {\n          vec4 color = coverTexture(image, sizeImage, vUv);\n\n          vec3 duotone = mix(\n            vec3(0.000, 0.122, 0.247),\n            vec3(0.000, 0.255, 0.851),\n            luma(color.rgb)\n          );\n\n          color.rgb = mix(color.rgb, duotone, vCenter);\n\n          gl_FragColor = color;\n        }\n      `,\n        uniforms: {\n          speed: 0,\n        },\n      });\n\n      const isFF = navigator.userAgent.indexOf(\"Firefox\") > -1;\n\n      document.addEventListener(\n        \"wheel\",\n        (e) => {\n          e.preventDefault();\n\n          let y = e.wheelDeltaY || e.deltaY * -1;\n\n          if (isFF) {\n            y *= 5;\n          }\n\n          flkty.applyForce(y * 0.03);\n          flkty.startAnimation();\n          flkty.dragEnd();\n        },\n        { passive: false }\n      );\n\n      const cells = [...document.querySelectorAll(\".cell\")];\n      const carpets = [];\n      cells.forEach((cell) => {\n        const carpet = aladino.carpet(cell, {\n          material,\n          uniforms: {\n            image: aladino.texture(cell.querySelector(\"img\").src),\n          },\n        });\n\n        carpets.push(carpet);\n      });\n\n      // let oldProgress = 0;\n      let speed = 0;\n\n      flkty.on(\"scroll\", (progress) => {\n        // The way flickity works doesn't allow an easy use of the position,\n        // So it can be optimised, as here we're recalculating dom boundingbox each time\n        carpets.forEach((carpet) => {\n          carpet.resize();\n        });\n\n        speed = flkty.velocity * 0.00025;\n\n        // speed = oldProgress - progress;\n        // oldProgress = progress;\n      });\n\n      const update = () => {\n        requestAnimationFrame(update);\n\n        // aladino.post.uniforms.speed = lerp(aladino.post.uniforms.speed, speed, .04);\n        material.uniforms.speed = lerp(material.uniforms.speed, speed, 0.04);\n      };\n\n      update();\n    </script>\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"d021990e23ee4697f17fbbccfe7c8052","cacheData":{"env":{}}}